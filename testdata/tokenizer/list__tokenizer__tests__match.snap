---
source: src/tokenizer.rs
expression: "contents.lines().filter_map(|line|\n                if line != \"\" {\n                        Some(format!(\"{line}\\n{:#?}\", Tokens :: from_str(line)))\n                    } else { None }).collect::<Vec<String>>().join(\"\\n\\n\")"
---
(match 100 (10 1) (_ 0))
Ok(
    Tokens(
        [
            ParenOpen,
            Keyword(
                Match,
            ),
            Literal(
                Int(
                    Int(
                        false,
                        100,
                    ),
                ),
            ),
            ParenOpen,
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        1,
                    ),
                ),
            ),
            ParenClose,
            ParenOpen,
            Identifier(
                "_",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        0,
                    ),
                ),
            ),
            ParenClose,
            ParenClose,
        ],
    ),
)

(match (Option->None) (Option->None 1) ((Option->Some var) if (= var 10) 0) ((Option->Some _) 3))
Ok(
    Tokens(
        [
            ParenOpen,
            Keyword(
                Match,
            ),
            ParenOpen,
            Identifier(
                "Option",
            ),
            Keyword(
                LeftArrow,
            ),
            Identifier(
                "None",
            ),
            ParenClose,
            ParenOpen,
            Identifier(
                "Option",
            ),
            Keyword(
                LeftArrow,
            ),
            Identifier(
                "None",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        1,
                    ),
                ),
            ),
            ParenClose,
            ParenOpen,
            ParenOpen,
            Identifier(
                "Option",
            ),
            Keyword(
                LeftArrow,
            ),
            Identifier(
                "Some",
            ),
            Identifier(
                "var",
            ),
            ParenClose,
            Keyword(
                If,
            ),
            ParenOpen,
            Char(
                '=',
            ),
            Identifier(
                "var",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            ParenClose,
            Literal(
                Int(
                    Int(
                        false,
                        0,
                    ),
                ),
            ),
            ParenClose,
            ParenOpen,
            ParenOpen,
            Identifier(
                "Option",
            ),
            Keyword(
                LeftArrow,
            ),
            Identifier(
                "Some",
            ),
            Identifier(
                "_",
            ),
            ParenClose,
            Literal(
                Int(
                    Int(
                        false,
                        3,
                    ),
                ),
            ),
            ParenClose,
            ParenClose,
        ],
    ),
)

(match (StructType { x->100 y->"hello" }) ((StructType { x->100 y->"hi" }) 3) ((StructType { x->var y->"hello" }) var) (_ 0))
Ok(
    Tokens(
        [
            ParenOpen,
            Keyword(
                Match,
            ),
            ParenOpen,
            Identifier(
                "StructType",
            ),
            CurlyOpen,
            Identifier(
                "x",
            ),
            Keyword(
                LeftArrow,
            ),
            Literal(
                Int(
                    Int(
                        false,
                        100,
                    ),
                ),
            ),
            Identifier(
                "y",
            ),
            Keyword(
                LeftArrow,
            ),
            Literal(
                String(
                    "hello",
                ),
            ),
            CurlyClose,
            ParenClose,
            ParenOpen,
            ParenOpen,
            Identifier(
                "StructType",
            ),
            CurlyOpen,
            Identifier(
                "x",
            ),
            Keyword(
                LeftArrow,
            ),
            Literal(
                Int(
                    Int(
                        false,
                        100,
                    ),
                ),
            ),
            Identifier(
                "y",
            ),
            Keyword(
                LeftArrow,
            ),
            Literal(
                String(
                    "hi",
                ),
            ),
            CurlyClose,
            ParenClose,
            Literal(
                Int(
                    Int(
                        false,
                        3,
                    ),
                ),
            ),
            ParenClose,
            ParenOpen,
            ParenOpen,
            Identifier(
                "StructType",
            ),
            CurlyOpen,
            Identifier(
                "x",
            ),
            Keyword(
                LeftArrow,
            ),
            Identifier(
                "var",
            ),
            Identifier(
                "y",
            ),
            Keyword(
                LeftArrow,
            ),
            Literal(
                String(
                    "hello",
                ),
            ),
            CurlyClose,
            ParenClose,
            Identifier(
                "var",
            ),
            ParenClose,
            ParenOpen,
            Identifier(
                "_",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        0,
                    ),
                ),
            ),
            ParenClose,
            ParenClose,
        ],
    ),
)
