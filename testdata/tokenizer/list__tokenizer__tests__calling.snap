---
source: src/tokenizer.rs
expression: "contents.lines().filter_map(|line|\n                if line != \"\" {\n                        Some(format!(\"{line}\\n{:#?}\", Tokens :: from_str(line)))\n                    } else { None }).collect::<Vec<String>>().join(\"\\n\\n\")"
---
(+ 4 1)
Ok(
    Tokens(
        [
            ParenOpen,
            Char(
                '+',
            ),
            Literal(
                Int(
                    Int(
                        false,
                        4,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        1,
                    ),
                ),
            ),
            ParenClose,
        ],
    ),
)

(= 10 xy)
Ok(
    Tokens(
        [
            ParenOpen,
            Char(
                '=',
            ),
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            Identifier(
                "xy",
            ),
            ParenClose,
        ],
    ),
)

(func 100 (+ 4 10))
Ok(
    Tokens(
        [
            ParenOpen,
            Identifier(
                "func",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        100,
                    ),
                ),
            ),
            ParenOpen,
            Char(
                '+',
            ),
            Literal(
                Int(
                    Int(
                        false,
                        4,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            ParenClose,
            ParenClose,
        ],
    ),
)

(= (func 69 (+ 1 10)) (func 10 100))
Ok(
    Tokens(
        [
            ParenOpen,
            Char(
                '=',
            ),
            ParenOpen,
            Identifier(
                "func",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        69,
                    ),
                ),
            ),
            ParenOpen,
            Char(
                '+',
            ),
            Literal(
                Int(
                    Int(
                        false,
                        1,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            ParenClose,
            ParenClose,
            ParenOpen,
            Identifier(
                "func",
            ),
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        100,
                    ),
                ),
            ),
            ParenClose,
            ParenClose,
        ],
    ),
)

((lambda (x y z) (and (= x y) (= x z))) 10 20 10)
Ok(
    Tokens(
        [
            ParenOpen,
            ParenOpen,
            Keyword(
                Lambda,
            ),
            ParenOpen,
            Identifier(
                "x",
            ),
            Identifier(
                "y",
            ),
            Identifier(
                "z",
            ),
            ParenClose,
            ParenOpen,
            Keyword(
                And,
            ),
            ParenOpen,
            Char(
                '=',
            ),
            Identifier(
                "x",
            ),
            Identifier(
                "y",
            ),
            ParenClose,
            ParenOpen,
            Char(
                '=',
            ),
            Identifier(
                "x",
            ),
            Identifier(
                "z",
            ),
            ParenClose,
            ParenClose,
            ParenClose,
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        20,
                    ),
                ),
            ),
            Literal(
                Int(
                    Int(
                        false,
                        10,
                    ),
                ),
            ),
            ParenClose,
        ],
    ),
)
